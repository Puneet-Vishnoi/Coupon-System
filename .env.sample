#Docker
# Application
PORT=8080
APP_ENV=development

# PostgreSQL (Main)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=Puneet
POSTGRES_DB=coupon-system
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DSN=postgres://postgres:Puneet@postgres:5432/coupon-system?sslmode=disable

# PostgreSQL (Test DB)
TEST_POSTGRES_USER=test_user
TEST_POSTGRES_PASSWORD=test_pass
TEST_POSTGRES_DB=coupon-test-db
TEST_POSTGRES_HOST=test-postgres
TEST_POSTGRES_PORT=5432
TEST_POSTGRES_DSN=postgres://test_user:test_pass@test-postgres:5432/coupon-test-db?sslmode=disable

# Redis
REDIS_ADDR=coupon-redis:6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis (Test DB)
TEST_REDIS_ADDR=coupon-test-redis:6379
TEST_REDIS_PASSWORD=
TEST_REDIS_DB=1

# Retry attempts for DB/Redis
MAX_DB_ATTEMPTS=5


#############################################################################################################################################
# Run in localhost


# Application
PORT=8080
APP_ENV=development

# PostgreSQL (Main)
POSTGRES_USER=postgres
POSTGRES_PASSWORD=Puneet
POSTGRES_DB=coupon-system
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DSN=postgres://postgres:Puneet@localhost:5432/coupon-system?sslmode=disable

# Redis
REDIS_ADDR=localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# Retry attempts for DB/Redis
MAX_DB_ATTEMPTS=5



# dockerization commands
docker-compose up --build 
docker-compose up -d 
docker-compose logs -f app
docker-compose run --rm app go test -v ./...

docker-compose down -v # to remove networks/volumes upon stop

docker-compose build # Build images without starting containers.

docker-compose ps # Show running containers.

docker-compose exec app bash # Run an interactive shell in the running app container



// gracefull shut down
// validation properly toZero
// how to change sql schema for scaling
// locks in db so 2 diffrent people cant appply same coupon